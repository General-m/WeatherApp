{"version":3,"sources":["components/ForecastNextCard/ForecastNextCard.module.css","components/WeatherCard/WeatherCard.module.css","components/SelectCity/SelectCity.module.css","components/ForecastPast/ForecastPast.module.css","components/ForecastEmpty/ForecastEmpty.module.css","components/ForecastPresent/ForecastPresent.module.css","components/Header/Header.module.css","components/SelectDate/SelectDate.module.css","components/App/App.module.css","components/Footer/Footer.module.css","components/ForecastHeader/ForecastHeader.module.css","components/ForecastPastCard/ForecastPastCard.module.css","components/Footer/Footer.tsx","components/Context.ts","components/ContextDate.ts","components/ForecastHeader/ForecastHeader.tsx","consts/cities.ts","components/SelectCity/SelectCity.tsx","components/SelectDate/SelectDate.tsx","consts/monthsName.ts","components/WeatherCard/WeatherCard.tsx","components/ForecastEmpty/ForecastEmpty.tsx","consts/API_KEY.ts","services/linkAPi-historical.ts","services/fetch-weather-historical.ts","components/ForecastPastCard/ForecastPastCard.tsx","components/ForecastPast/ForecastPast.tsx","services/linkAPi.ts","services/fetch-weather.ts","components/ForecastNextCard/ForecastNextCard.tsx","components/ForecastPresent/ForecastPresent.tsx","components/Header/Header.tsx","components/App/App.tsx","index.tsx"],"names":["module","exports","Footer","className","classes","footer","Context","createContext","context","setContext","ContextDate","contextT","setContextT","ForecastHeader","title","forecast__title","CITIES","Kazan","lat","lon","Krasnodar","Samara","Saratov","Togliatti","SelectCity","value","useContext","citiesList","Object","keys","label__wrapper","form__input","input__city","type","onChange","event","target","handleChange","placeholder","list","id","map","item","index","SelectDate","time","useState","viewDate","setViewDate","useEffect","console","log","select","input__date","Date","parse","preventDefault","MONTHS_NAME","Card","forecast","style","card","card__date","date","getDate","getMonth","getFullYear","card__image","width","height","src","icon","alt","card__temperature","temp","ForecastEmpty","content","content__image","content__message","apiKey","linkApi","latitude","longitude","fetchWeatherHistorical","a","fetch","response","json","data","error","message","ForecastPastCard","selectCity","selectTime","isforecastGet","setIsForecastGet","temperature","setTemperature","weatherIcon","setWeatherIcon","weatherDate","setWeatherDate","then","Math","round","current","weather","dt","timezone_offset","container","WeatherCard","ForecastPast","Provider","forecast__header","fetchWeather","ForecastNextCard","isForecastGet","startNumber","setStartNumber","endNumber","setEndNumber","numberDaysForecast","forecastList","setForecastList","daily","key","info","day","onClick","startOrder","slider","slider__prev","slider__next","ForecastPresent","Header","header","title__span","App","main","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.001c6f4a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ForecastNextCard_container__597b1\",\"slider\":\"ForecastNextCard_slider__2yMGc\",\"slider__prev\":\"ForecastNextCard_slider__prev__3dPDQ\",\"slider__next\":\"ForecastNextCard_slider__next__2qJBq\",\"slider-disabled\":\"ForecastNextCard_slider-disabled__1Wzj8\",\"forecast\":\"ForecastNextCard_forecast__1KQJj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"WeatherCard_card__1K-Xq\",\"card__fullWidth\":\"WeatherCard_card__fullWidth__8LGIL\",\"card__date\":\"WeatherCard_card__date__t5Jmq\",\"card__image\":\"WeatherCard_card__image__1jW9J\",\"card__temperature\":\"WeatherCard_card__temperature__36jzk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label__wrapper\":\"SelectCity_label__wrapper__1yuSb\",\"input__city\":\"SelectCity_input__city__1dHRY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forecast\":\"ForecastPast_forecast__3mHhV\",\"select\":\"ForecastPast_select__3K3f0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content__image\":\"ForecastEmpty_content__image__3qKSy\",\"content\":\"ForecastEmpty_content__Ue1TT\",\"content__message\":\"ForecastEmpty_content__message__3EeR4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forecast\":\"ForecastPresent_forecast__14Fkp\",\"select\":\"ForecastPresent_select__1lqAA\",\"leftArrow\":\"ForecastPresent_leftArrow__37W26\",\"rightArrow\":\"ForecastPresent_rightArrow__1dA-l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"title\":\"Header_title__3SH2Q\",\"title__span\":\"Header_title__span__3H-Ek\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SelectDate_select__3nCTK\",\"input__date\":\"SelectDate_input__date__17tFt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__16xz_\",\"main\":\"App_main__w13HL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1w0lV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forecast__title\":\"ForecastHeader_forecast__title__1DQ57\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ForecastPastCard_container__2-bRg\",\"leftArrow\":\"ForecastPastCard_leftArrow__2MMzH\",\"rightArrow\":\"ForecastPastCard_rightArrow__jy-N1\",\"forecast\":\"ForecastPastCard_forecast__21Cjj\"};","import React from 'react';\nimport classes from './Footer.module.css'\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className={classes.footer}>\n      C ЛЮБОВЬЮ ОТ MERCURY DEVELOPMENT\n    </footer>\n  )\n}\n\nexport default Footer;","import { createContext } from \"react\";\n\nexport type GlobalContent = {\n  context?: string;\n  setContext: (c: string) => void;\n};\nconst Context = createContext<GlobalContent>({\n  context: \"\",\n  setContext: () => {},\n});\n\nexport default Context;\n","import { createContext } from \"react\";\n\nexport interface GlobalContent {\n  contextT?: number;\n  setContextT: (c: number) => void;\n}\n\nconst ContextDate = createContext<GlobalContent>({\n  contextT: 0,\n  setContextT: () => {},\n});\nexport default ContextDate;\n","import React from 'react';\nimport classes from './ForecastHeader.module.css';\nimport SelectCity from '../SelectCity/SelectCity';\n\ntype Props = {\n  title: string\n}\n\nconst ForecastHeader: React.FC<Props> = ({ title }) => {\n  return (\n    <h2 className={classes.forecast__title}>\n      {title}</h2>\n\n  )\n}\n\nexport default ForecastHeader;\n","export const CITIES = {\n  Kazan: {\n    lat: 55.796127,\n    lon: 49.106405,\n  },\n  Krasnodar: {\n    lat: 45.03547,\n    lon: 38.975313,\n  },\n  Samara: {\n    lat: 53.195873,\n    lon: 50.100193,\n  },\n  Saratov: {\n    lat: 51.533557,\n    lon: 46.034257,\n  },\n  Togliatti: {\n    lat: 53.507836,\n    lon: 49.420393,\n  },\n};\n","import React, { useContext } from 'react';\nimport classes from './SelectCity.module.css';\nimport { CITIES } from '../../consts/cities';\nimport Context from '../Context';\n\nconst SelectCity: React.FC = () => {\n  const value = useContext(Context);\n  const citiesList = Object.keys(CITIES);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    value.setContext(event.target.value);\n  };\n\n  return (\n    <div className={classes.label__wrapper}>\n      <label className={classes.form__input}>\n        <input className={classes.input__city}\n          type=\"text\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>): void => handleChange(event)}\n          placeholder='Select city'\n          list=\"lst\"\n        />\n      </label>\n\n      <datalist id=\"lst\">\n        {\n          citiesList.map((item, index) => (\n            <option key={index} value={item} ></option>\n          ))\n        }\n      </datalist>\n    </div >\n  )\n}\n\nexport default SelectCity;\n","import React, { useContext, useEffect, useState } from 'react';\nimport ContextDate from '../ContextDate';\nimport classes from './SelectDate.module.css';\n\nconst SelectDate: React.FC = () => {\n  const time = useContext(ContextDate);\n  const [viewDate, setViewDate] = useState<number>(0);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    time.setContextT((Date.parse(event.target.value) / 1000));\n    console.log((Date.parse(event.target.value) / 1000))\n    event.preventDefault();\n    setViewDate(viewDate => (Date.parse(event.target.value) / 1000));\n\n  };\n\n  useEffect(() => {\n\n    console.log(viewDate)\n\n  }, [viewDate])\n\n\n  console.log(viewDate)\n  return (\n    <div className={classes.select}>\n      <input className={classes.input__date} type=\"date\"\n\n        // min-max\n        // placeholder=\"Select date\"\n        value={viewDate}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>): void => handleChange(event)} />\n\n    </div>\n  )\n}\n\nexport default SelectDate;\n","export const MONTHS_NAME = [\n  \"jan\",\n  \"feb\",\n  \"mar\",\n  \"apr\",\n  \"may\",\n  \"jun\",\n  \"jul\",\n  \"aug\",\n  \"sep\",\n  \"oct\",\n  \"nov\",\n  \"dec\",\n];\n","import React from 'react';\nimport classes from './WeatherCard.module.css';\nimport { MONTHS_NAME } from '../../consts/monthsName';\n\ntype Props = {\n  forecast: Weather,\n  style?: object\n}\n\ntype Weather = {\n  date: number,\n  icon: string,\n  temp: number\n}\n\nconst Card: React.FC<Props> = ({ forecast, style }) => {\n  const getDate = () => {\n    return (\n      new Date(forecast.date).getDate()\n      + ' ' + MONTHS_NAME[new Date(forecast.date).getMonth()] + ' ' + new Date(forecast.date).getFullYear()\n    )\n  }\n\n  return (\n\n    <div className={classes.card} style={style}>\n      <div className={classes.card__date}>\n        {getDate()}\n      </div>\n      <div className={classes.card__image}>\n        <img width='80px' height='80px' src={forecast.icon} alt='weather icon'></img>\n      </div>\n      <div className={classes.card__temperature}>\n        {forecast.temp > 0 ? '+' + forecast.temp : \"-\" + forecast.temp}°\n        </div>\n    </div>\n\n  )\n}\nexport default Card;\n","import React from 'react';\nimport classes from './ForecastEmpty.module.css'\n\nconst ForecastEmpty: React.FC = () => {\n\n  return (\n    <section className={classes.content} >\n      <div className={classes.content__image} >\n      </div>\n      <div className={classes.content__message} >\n        Fill in all the fields and the weather will be displayed\n        </div>\n    </section>\n  )\n}\n\nexport default ForecastEmpty;\n","export const apiKey = \"630198738706e6feb41dd55034d68b96\";\n","import { apiKey } from \"../consts/API_KEY\";\n\nexport const linkApi = (latitude: number, longitude: number, time: number) =>\n  `https://api.openweathermap.org/data/2.5/onecall/timemachine?lat=${latitude}&lon=${longitude}&units=metric&dt=${time}&appid=${apiKey}`;\n","import { linkApi } from \"./linkAPi-historical\";\n\nexport const fetchWeatherHistorical = async (\n  latitude: number,\n  longitude: number,\n  time: number\n) => {\n  try {\n    const response = await fetch(linkApi(latitude, longitude, time));\n    const data = await response.json();\n    return data;\n  } catch (e) {\n    console.error(e.message);\n    return null;\n  }\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport classes from './ForecastPastCard.module.css'\nimport WeatherCard from '../WeatherCard/WeatherCard';\nimport { CITIES } from '../../consts/cities'\nimport Context from '../Context';\nimport ContextDate from '../ContextDate';\nimport ForecastEmpty from '../ForecastEmpty/ForecastEmpty';\nimport { fetchWeatherHistorical } from '../../services/fetch-weather-historical';\n\nconst ForecastPastCard: React.FC = () => {\n  const value = useContext(Context);\n  const time = useContext(ContextDate);\n  const selectCity = value.context;\n  const selectTime = time.contextT;\n  const [isforecastGet, setIsForecastGet] = useState(false);\n  const [temperature, setTemperature] = useState<number>(0);\n  const [weatherIcon, setWeatherIcon] = useState<string>('');\n  const [weatherDate, setWeatherDate] = useState<number>(0);\n\n  useEffect(() => {\n    if (selectCity && CITIES[selectCity] && selectTime) {\n      fetchWeatherHistorical(CITIES[selectCity].lat, CITIES[selectCity].lon, selectTime).then((data) => {\n        console.log(data);\n        setTemperature(Math.round(data.current.temp));\n        setWeatherIcon(`https://openweathermap.org/img/w/${data.current.weather[0].icon}.png`);\n        setWeatherDate(data.current.dt * 1000 - (data.timezone_offset * 1000));\n        setIsForecastGet(true);\n      });\n    }\n    setIsForecastGet(false);\n  }, [selectCity, selectTime]);\n\n\n  return isforecastGet ? (\n    <section className={classes.container}>\n      {\n        <WeatherCard style={{ width: \" 54.4rem\" }} forecast={\n          {\n            date: weatherDate,\n            icon: weatherIcon,\n            temp: temperature\n          }} />\n      }\n    </section>\n  ) :\n    (\n      <ForecastEmpty />\n    )\n}\n\nexport default ForecastPastCard;\n","import React, { useState } from 'react';\nimport Context from \"../Context\";\nimport ContextDate from '../ContextDate';\nimport ForecastHeader from '../ForecastHeader/ForecastHeader';\nimport SelectCity from '../SelectCity/SelectCity';\nimport SelectDate from '../SelectDate/SelectDate';\nimport classes from './ForecastPast.module.css';\nimport ForecastPastCard from '../ForecastPastCard/ForecastPastCard';\n\n\nconst ForecastPast: React.FC = () => {\n  const [context, setContext] = useState<string>();\n  const [contextT, setContextT] = useState<number>();\n  const value = {\n    context,\n    setContext\n  }\n\n  const time = {\n    contextT,\n    setContextT\n  }\n  return (\n    <Context.Provider value={value}>\n      <ContextDate.Provider value={time}>\n        <article className={classes.forecast}>\n          <section className={classes.forecast__header}>\n            <ForecastHeader title='Forecast for a Date in the Past' />\n            <div className={classes.select}>\n              <SelectCity />\n              <SelectDate />\n            </div>\n          </section>\n          <ForecastPastCard />\n        </article>\n      </ContextDate.Provider>\n\n    </Context.Provider >\n\n  )\n}\n\nexport default ForecastPast;\n","import { apiKey } from \"../consts/API_KEY\";\n\nexport const linkApi = (latitude: number, longitude: number) =>\n  `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&units=metric&exclude=current,minutely,hourly,alerts&appid=${apiKey}`;\n","import { linkApi } from \"./linkAPi\";\n\nexport const fetchWeather = async (latitude: number, longitude: number) => {\n  try {\n    const response = await fetch(linkApi(latitude, longitude));\n    const data = await response.json();\n    return data;\n  } catch (e) {\n    console.error(e.message);\n    return null;\n  }\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport classes from './ForecastNextCard.module.css'\nimport { CITIES } from '../../consts/cities'\nimport { fetchWeather } from '../../services/fetch-weather';\nimport Context from '../Context';\nimport ForecastEmpty from '../ForecastEmpty/ForecastEmpty';\nimport WeatherCard from '../WeatherCard/WeatherCard';\n\ntype DataList = {\n  date: number,\n  icon: string,\n  temp: number\n\n}\n\nconst ForecastNextCard: React.FC = () => {\n  const value = useContext(Context);\n  const selectCity = value.context;\n  const [isForecastGet, setIsForecastGet] = useState(false);\n  const [startNumber, setStartNumber] = useState<number>(0);\n  const [endNumber, setEndNumber] = useState<number>(3);\n  const [numberDaysForecast, setNumberDaysForecast] = useState<number>(7);\n  const [forecastList, setForecastList] = useState<Array<DataList>>([])\n\n  useEffect(() => {\n    if (selectCity && CITIES[selectCity]) {\n      fetchWeather(CITIES[selectCity].lat, CITIES[selectCity].lon).then((data) => {\n\n        Object.keys(data.daily).map((key: string, index: number) => {\n          if (index < numberDaysForecast) {\n            let info: DataList = {\n              date: 0,\n              icon: '',\n              temp: 0\n            };\n            info.date = data.daily[key].dt * 1000 - (data.timezone_offset * 1000);\n            info.icon = (`https://openweathermap.org/img/w/${data.daily[key].weather[0].icon}.png`)\n            info.temp = (Math.round(data.daily[key].temp.day));\n            setForecastList(forecastList => [...forecastList, info]);\n          }\n          return null;\n        })\n        setIsForecastGet(true);\n      });\n    }\n    setIsForecastGet(false);\n  }, [selectCity]);\n\n  const getNext = () => {\n    if (endNumber + 1 < numberDaysForecast) {\n      setStartNumber(startOrder => startOrder + 1);\n      setEndNumber(startOrder => startOrder + 1);\n    }\n  }\n\n  const getPrev = () => {\n    if (startNumber) {\n      setStartNumber(startOrder => startOrder - 1);\n      setEndNumber(startOrder => startOrder - 1);\n    }\n  }\n\n  return isForecastGet ? (\n    <section className={classes.container}>\n      <div onClick={() => getPrev()} className={`${classes.slider} ${classes.slider__prev} \n       ${!startNumber ? classes['slider-disabled'] : ''}`}></div>\n      {\n        forecastList.map((item, index) => {\n          if (startNumber <= index && index < endNumber)\n            return <WeatherCard key={index} forecast={item} />\n        })\n      }\n      <div onClick={() => getNext()} className={`${classes.slider} ${classes.slider__next} \n     ${(endNumber + 1 === numberDaysForecast) ? classes['slider-disabled'] : ''}`}></div>\n    </section >\n  ) :\n    (\n      <ForecastEmpty />\n    )\n}\n\nexport default ForecastNextCard;\n","import React, { useState } from 'react';\nimport Context from \"../Context\";\nimport ForecastHeader from '../ForecastHeader/ForecastHeader';\nimport SelectCity from '../SelectCity/SelectCity';\nimport classes from './ForecastPresent.module.css';\nimport ForecastNextCard from '../ForecastNextCard/ForecastNextCard';\n\n\nconst ForecastPresent: React.FC = () => {\n\n  const [context, setContext] = useState<string>();\n  const value = {\n    context,\n    setContext\n  }\n\n  return (\n    <Context.Provider value={value}>\n      <article className={classes.forecast}>\n        <section className={classes.forecast__header}>\n          <ForecastHeader title='7 Days Forecast' />\n          <div className={classes.select}>\n            <SelectCity />\n          </div>\n        </section>\n        <ForecastNextCard />\n      </article>\n\n    </Context.Provider>\n  )\n}\n\nexport default ForecastPresent;\n","import React from 'react';\nimport classes from './Header.module.css'\n\nconst Header: React.FC = () => {\n  return (\n    <header className={classes.header}>\n      <h1 className={classes.title}>\n        Weather\n        <span className={classes.title__span}>\n          forecast\n        </span>\n      </h1>\n\n    </header>\n  )\n}\n\nexport default Header;\n","import Footer from \"../Footer/Footer\";\nimport ForecastPast from \"../ForecastPast/ForecastPast\";\nimport ForecastPresent from \"../ForecastPresent/ForecastPresent\";\nimport Header from \"../Header/Header\";\nimport classes from \"./App.module.css\";\n\nconst App: React.FC = () => {\n  return (\n    <div className={classes.container}>\n      <Header />\n      <main className={classes.main}>\n        <ForecastPresent />\n        <ForecastPast />\n      </main>\n      <Footer />\n    </div >\n  )\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}